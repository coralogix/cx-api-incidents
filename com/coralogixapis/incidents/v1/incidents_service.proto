syntax = "proto3";

package com.coralogixapis.incidents.v1;

import "com/coralogixapis/incidents/v1/assignee.proto";
import "com/coralogixapis/incidents/v1/incident.proto";
import "com/coralogixapis/incidents/v1/incident_event/incident_event.proto";
import "com/coralogixapis/incidents/v1/incident_filters.proto";
import "com/coralogixapis/incidents/v1/incident_query.proto";
import "com/coralogixapis/incidents/v1/incident_query_filter.proto";
import "com/coralogixapis/incidents/v1/incident_severity.proto";
import "com/coralogixapis/incidents/v1/incident_state.proto";
import "com/coralogixapis/incidents/v1/incident_status.proto";
import "com/coralogixapis/incidents/v1/incident_timeline_event.proto";
import "com/coralogixapis/incidents/v1/source_single_alert_snapshot.proto";
import "google/api/annotations.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

message AuditLogDescription {
  optional string description = 1;
}

extend google.protobuf.MethodOptions {
  optional AuditLogDescription audit_log_description = 5000;
}

service IncidentsService {
  rpc GetIncident(GetIncidentRequest) returns (GetIncidentResponse) {
    option (audit_log_description).description = "get incident";
    option (google.api.http) = {get: "/v1/incidents/{id}"};
  }

  rpc BatchGetIncident(BatchGetIncidentRequest) returns (BatchGetIncidentResponse) {
    option (audit_log_description).description = "batch get incidents";
    option (google.api.http) = {get: "/v1/incidents/incidents:batchGet"};
  }

  rpc ListIncidents(ListIncidentsRequest) returns (ListIncidentsResponse) {
    option (audit_log_description).description = "get incidents list";
    option (google.api.http) = {
      get: "/v1/incidents"
      body: "*"
    };
  }

  rpc ListAggregativeIncidents(ListAggregativeIncidentsRequest) returns (ListAggregativeIncidentsResponse) {
    option (audit_log_description).description = "get aggregative incidents list";
    option (google.api.http) = {
      get: "/v1/incidents"
      body: "*"
    };
  }

  //  rpc AtomicBatchExecuteIncidentAction(AtomicBatchExecuteIncidentActionRequest) returns (AtomicBatchExecuteIncidentActionResponse) {
  //    option (audit_log_description).description = "Atomic Batch execute incident action";
  //    option (google.api.http) = {get: "/v1/incidents/incident-action:atomicBatchExecute"};
  //  }

  rpc ListIncidentAlerts(ListIncidentAlertsRequest) returns (ListIncidentAlertsResponse) {
    option (audit_log_description).description = "list incident alerts";
    option (google.api.http) = {
      get: "/v1/incidents/alerts"
      body: "*"
    };
    /*option deprecated = true;*/
  }

  rpc ListNotificationGroups(ListNotificationGroupsRequest) returns (ListNotificationGroupsResponse) {
    option (audit_log_description).description = "list notification groups";
    option (google.api.http) = {
      get: "/v1/incidents/notification-groups"
      body: "*"
    };
    /*option deprecated = true;*/
  }

  rpc ListFilters(ListFiltersRequest) returns (ListFiltersResponse) {
    option (audit_log_description).description = "ListFilters";
    option (google.api.http) = {
      get: "/v1/incidents/list-filters"
      body: "*"
    };
  }

  rpc GetTriggeredIncidentsTimeline(GetTriggeredIncidentsTimelineRequest) returns (GetTriggeredIncidentsTimelineResponse) {
    option (audit_log_description).description = "get triggered incidents timeline";
    option (google.api.http) = {
      get: "/v1/incidents/triggered-incidents-timeline"
      body: "*"
    };
  }

  rpc AssignIncident(AssignIncidentRequest) returns (AssignIncidentResponse) {
    option (audit_log_description).description = "assign an incident";
    option (google.api.http) = {
      get: "/v1/incidents/incident:assign"
      body: "*"
    };
  }

  rpc AssignAlertIncidents(AssignAlertIncidentsRequest) returns (AssignAlertIncidentsResponse) {
    option (audit_log_description).description = "assign all incidents of the alert";
    option (google.api.http) = {
      get: "/v1/incidents/alert-incidents:assign"
      body: "*"
    };
    /*option deprecated = true;*/
  }

  rpc AcknowledgeIncident(AcknowledgeIncidentRequest) returns (AcknowledgeIncidentResponse) {
    option (audit_log_description).description = "Acknowledge an incident";
    option (google.api.http) = {
      get: "/v1/incidents/incident:acknowledge"
      body: "*"
    };
  }
  rpc AcknowledgeAlertIncidents(AcknowledgeAlertIncidentsRequest) returns (AcknowledgeAlertIncidentsResponse) {
    option (audit_log_description).description = "Acknowledge all incidents of the alert";
    option (google.api.http) = {
      get: "/v1/incidents/alert-incidents:acknowledge"
      body: "*"
    };
    /*option deprecated = true;*/
  }

  rpc CloseIncident(CloseIncidentRequest) returns (CloseIncidentResponse) {
    option (audit_log_description).description = "close an incident";
    option (google.api.http) = {
      get: "/v1/incidents/incident:close"
      body: "*"
    };
  }
  rpc CloseAlertIncidents(CloseAlertIncidentsRequest) returns (CloseAlertIncidentsResponse) {
    option (audit_log_description).description = "close all incidents of the alert";
    option (google.api.http) = {
      get: "/v1/incidents/alert-incidents:close"
      body: "*"
    };
    /*option deprecated = true;*/
  }

  rpc GetIncidentEvent(GetIncidentEventRequest) returns (GetIncidentEventResponse) {
    option (audit_log_description).description = "get all incident events of the incident";
    option (google.api.http) = {
      get: "/v1/incidents/events"
      body: "*"
    };
  }
}

enum TimelinesGroupByFields {
  TIMELINES_GROUP_BY_FIELDS_UNSPECIFIED = 0;
  TIMELINES_GROUP_BY_FIELDS_NONE = 1;
  TIMELINES_GROUP_BY_FIELDS_ALERT = 2;
  TIMELINES_GROUP_BY_FIELDS_NOTIFICATION_GROUP = 3;
}

message GetIncidentRequest {
  google.protobuf.StringValue id = 1;
}

message GetIncidentResponse {
  Incident incident = 1;
}

message ListIncidentsResponse {
  repeated Incident incidents = 1;
  google.protobuf.UInt32Value total_size = 2;
  google.protobuf.StringValue next_page_token = 3;
  PaginationResponse pagination = 4;
}

message ListIncidentsRequest {
  IncidentQuery query = 1;
  google.protobuf.UInt32Value page_size = 2;
  google.protobuf.StringValue page_token = 3;
  IncidentQueryFilter filters = 4;
  PaginationRequest pagination = 5;
}

message ListTimelinesRequest {
  IncidentQuery query = 1;
  google.protobuf.UInt32Value granularity_seconds = 2;
  repeated google.protobuf.StringValue incident_ids = 3;
  TimelinesGroupByFields group_by = 4;
}

message ListTimelinesResponse {
  map<string, TimelineEventList> events = 1;
  TimelinesGroupByFields group_by = 2;
}

message GetTriggeredIncidentsTimelineRequest {
  IncidentQuery query = 1;
  google.protobuf.UInt32Value granularity_seconds = 2;
}

message GetTriggeredIncidentsTimelineResponse {
  repeated TriggeredIncidentsPerTimestamp events = 1;
}

message TriggeredIncidentsPerTimestamp {
  google.protobuf.UInt32Value number_of_incidents = 1;
  google.protobuf.Timestamp timestamp = 2;
}

message TimelineEventList {
  repeated IncidentTimelineEvent events = 1;
}

message BatchGetIncidentRequest {
  repeated google.protobuf.StringValue ids = 1;
  repeated OrderBy order_bys = 2;
}

message BatchGetIncidentResponse {
  map<string, Incident> incidents = 1;
  repeated google.protobuf.StringValue not_found_ids = 2;
}

message DeleteIncidentRequest {
  google.protobuf.StringValue id = 1;
}
message PaginationRequest {
  google.protobuf.UInt32Value page_size = 1;
  google.protobuf.StringValue page_token = 2;
}
message PaginationResponse {
  google.protobuf.UInt32Value total_size = 1;
  google.protobuf.StringValue next_page_token = 2;
}

message ListAggregativeIncidentsRequest {
  IncidentQueryFilter filters = 1;
  repeated GroupBy group_bys = 2;
  PaginationRequest pagination = 3;
}
message ListAggregativeIncidentsResponse {
  repeated AggregativeIncident agg_incidents = 1;
  PaginationResponse pagination = 2;
}

message ListIncidentAlertsRequest {
  IncidentQuery query = 1;
  google.protobuf.UInt32Value page_size = 2;
  google.protobuf.StringValue page_token = 3;
}

message AlertAggIncidentsDetails {
  AlertDef alert = 1;
  AggIncidentsDetails agg_incidents_detail = 2;
}

message AggIncidentsDetails {
  google.protobuf.Timestamp last_incident_state_update_time = 1;
  google.protobuf.UInt32Value num_of_notification_groups = 2;
  google.protobuf.BoolValue are_all_resolved = 3;
  google.protobuf.UInt32Value num_of_triggered_incidents = 4;
  repeated Assignment all_assignments = 5;
  google.protobuf.BoolValue are_all_acknowledged = 6;
  AlertTypeConcluded alert_type_concluded = 7;
}

message ListIncidentAlertsResponse {
  repeated AlertAggIncidentsDetails alerts_agg_incidents_details = 1;
  google.protobuf.UInt32Value total_size = 2;
  google.protobuf.StringValue next_page_token = 3;
}

message ListNotificationGroupsRequest {
  IncidentQuery query = 1;
}

message ListFiltersRequest {
  IncidentQuery query = 1;
}

message ListFiltersResponse {
  repeated Filter filters = 1;
}

message ListNotificationGroupsResponse {
  repeated NotificationGroup notification_groups = 1;
}

message DeleteIncidentResponse {}

message ReplaceIncidentRequest {
  Incident incident = 1;
}

message ReplaceIncidentResponse {
  Incident incident = 1;
}

message GetIncidentEventRequest {
  google.protobuf.StringValue incident_id = 1;
}
message GetIncidentEventResponse {
  repeated IncidentEvent incident_events = 1;
}
message AssignAlertIncidentsRequest {
  google.protobuf.StringValue alert_id = 1;
  UserDetails assigned_to = 2;
}

message AssignAlertIncidentsResponse {
  repeated Incident incidents = 1;
}

message AssignIncidentRequest {
  google.protobuf.StringValue incident_id = 1;
  UserDetails assigned_to = 2;
}

message AssignIncidentResponse {
  Incident incident = 1;
}

message AcknowledgeAlertIncidentsRequest {
  google.protobuf.StringValue alert_id = 1;
}

message AcknowledgeAlertIncidentsResponse {
  repeated Incident incidents = 1;
}

message AcknowledgeIncidentRequest {
  google.protobuf.StringValue incident_id = 1;
}

message AcknowledgeIncidentResponse {
  Incident incident = 1;
}
message CloseAlertIncidentsRequest {
  google.protobuf.StringValue alert_id = 1;
}

message CloseAlertIncidentsResponse {
  repeated Incident incidents = 1;
}

message CloseIncidentRequest {
  google.protobuf.StringValue incident_id = 1;
}

message CloseIncidentResponse {
  Incident incident = 1;
}
