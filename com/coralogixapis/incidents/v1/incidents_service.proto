syntax = "proto3";

package com.coralogixapis.incidents.v1;

import "com/coralogixapis/incidents/v1/assignee.proto";
import "com/coralogixapis/incidents/v1/incident.proto";
import "com/coralogixapis/incidents/v1/incident_event/incident_event.proto";
import "com/coralogixapis/incidents/v1/incident_query.proto";
import "com/coralogixapis/incidents/v1/incident_query_filter.proto";
import "com/coralogixapis/incidents/v1/incident_query_filters_values.proto";
import "google/api/annotations.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

message AuditLogDescription {
  optional string description = 1;
}

extend google.protobuf.MethodOptions {
  optional AuditLogDescription audit_log_description = 5000;
}

service IncidentsService {
  rpc GetIncident(GetIncidentRequest) returns (GetIncidentResponse) {
    option (audit_log_description).description = "Get incident";
    option (google.api.http) = {get: "/v1/incidents/{id}"};
  }

  rpc BatchGetIncident(BatchGetIncidentRequest) returns (BatchGetIncidentResponse) {
    option (audit_log_description).description = "Batch get incidents";
    option (google.api.http) = {post: "/v1/incidents:batchGet"};
  }

  rpc ListIncidents(ListIncidentsRequest) returns (ListIncidentsResponse) {
    option (audit_log_description).description = "Get incidents list";
    option (google.api.http) = {
      post: "/v1/incidents"
      body: "*"
    };
  }
  rpc ListIncidentAggregations(ListIncidentAggregationsRequest) returns (ListIncidentAggregationsResponse) {
    option (audit_log_description).description = "List incident aggregations";
    option (google.api.http) = {
      post: "/v1/incidents:listIncidentAggregations"
      body: "*"
    };
  }
/*
 This shouldn't be exposed in the docs, it has no external usecase
 Rpc to get the values and count of the filters of the all the incidents (under the filter specified)
 */
  rpc GetFilterValues(GetFilterValuesRequest) returns (GetFilterValuesResponse) {
      option (audit_log_description).description = "Get filter values";
      option (google.api.http) = {
      post: "/v1/incidents:getFilterValues"
      body: "*"
    };
  }

  rpc AssignIncidents(AssignIncidentsRequest) returns (AssignIncidentsResponse) {
    option (audit_log_description).description = "Assign incidents";
    option (google.api.http) = {
      post: "/v1/incidents:assign"
      body: "*"
    };
  }

  rpc UnassignIncidents(UnassignIncidentsRequest) returns (UnassignIncidentsResponse) {
    option (audit_log_description).description = "Unassign incidents";
    option (google.api.http) = {
      post: "/v1/incidents:unassign"
      body: "*"
    };
  }
  rpc AcknowledgeIncidents(AcknowledgeIncidentsRequest) returns (AcknowledgeIncidentsResponse) {
    option (audit_log_description).description = "Acknowledge incidents";
    option (google.api.http) = {
      post: "/v1/incidents:acknowledge"
      body: "*"
    };
  }
  rpc CloseIncidents(CloseIncidentsRequest) returns (CloseIncidentsResponse) {
    option (audit_log_description).description = "Close incidents";
    option (google.api.http) = {
      post: "/v1/incidents:close"
      body: "*"
    };
  }
  rpc GetIncidentEvents(GetIncidentEventsRequest) returns (GetIncidentEventsResponse) {
    option (audit_log_description).description = "Get all incident events of the incident";
    option (google.api.http) = {
      get: "/v1/incidents/{id}/events"
      body: "*"
    };
  }

  rpc ResolveIncidents(ResolveIncidentsRequest) returns (ResolveIncidentsResponse) {
    option (audit_log_description).description = "Resolve incidents";
    option (google.api.http) = {
      post: "/v1/incidents:resolve"
      body: "*"
    };
  }

  /*
    This shouldn't be exposed in the docs, it has no external usecase
   */
  rpc GetIncidentUsingCorrelationKey(GetIncidentUsingCorrelationKeyRequest) returns (GetIncidentUsingCorrelationKeyResponse) {
  option (audit_log_description).description = "Get incident by correlation key and specific point in time";
      option (google.api.http) = {
      post: "/v1/incidents:getIncidentUsingCorrelationKey"
      body: "*"
      };
  }
}

message GetIncidentRequest {
  google.protobuf.StringValue id = 1;
}

message GetIncidentResponse {
  Incident incident = 1;
}

message ListIncidentsResponse {
  repeated Incident incidents = 1;
  PaginationResponse pagination = 4;
}

message ListIncidentsRequest {
  IncidentQueryFilter filter = 4;
  PaginationRequest pagination = 5;
  repeated OrderBy order_bys = 6;
}

message BatchGetIncidentRequest {
  repeated google.protobuf.StringValue ids = 1;
}

message BatchGetIncidentResponse {
  map<string, Incident> incidents = 1;
  repeated google.protobuf.StringValue not_found_ids = 2;
}

message DeleteIncidentRequest {
  google.protobuf.StringValue id = 1;
}
message PaginationRequest {
  google.protobuf.UInt32Value page_size = 1;
  google.protobuf.StringValue page_token = 2;
}
message PaginationResponse {
  google.protobuf.UInt32Value total_size = 1;
  google.protobuf.StringValue next_page_token = 2;
}

message ListIncidentAggregationsRequest {
  IncidentQueryFilter filter = 1;
  repeated GroupBy group_bys = 2;
  PaginationRequest pagination = 3;
}
message ListIncidentAggregationsResponse {
  repeated IncidentAggregation incident_aggs = 1;
  PaginationResponse pagination = 2;
}

message GetFilterValuesRequest {
  IncidentQueryFilter filter = 1;
}
message GetFilterValuesResponse {
  IncidentQueryFiltersValues filters_values = 1;
}

message GetIncidentEventsRequest {
  google.protobuf.StringValue incident_id = 1;
}

message GetIncidentEventsResponse {
  repeated IncidentEvent incident_events = 1;
}

message AssignIncidentsRequest {
  repeated google.protobuf.StringValue incident_ids = 5;
  UserDetails assigned_to = 2;
}

message UnassignIncidentsRequest {
  repeated google.protobuf.StringValue incident_ids = 1;
}
message UnassignIncidentsResponse {
  repeated Incident incidents = 1;
}

message AssignIncidentsResponse {
  repeated Incident incidents = 2;
}

message AcknowledgeIncidentsRequest {
  repeated google.protobuf.StringValue incident_ids = 2;
}

message AcknowledgeIncidentsResponse {
  repeated Incident incidents = 2;
}

message CloseIncidentsRequest {
  repeated google.protobuf.StringValue incident_ids = 2;
}

message CloseIncidentsResponse {
  repeated Incident incidents = 2;
}

message ResolveIncidentsRequest {
  repeated google.protobuf.StringValue incident_ids = 1;
}

message ResolveIncidentsResponse {
  repeated Incident incidents = 1;
}

message GetIncidentUsingCorrelationKeyRequest {
  google.protobuf.StringValue correlation_key = 1;
  google.protobuf.Timestamp incident_point_in_time = 2;
}

message GetIncidentUsingCorrelationKeyResponse {
  Incident incident = 1;
}