syntax = "proto3";

package com.coralogixapis.incidents.v1;

import "com/coralogixapis/incidents/v1/incident.proto";
import "com/coralogixapis/incidents/v1/incident_action/incident_action.proto";
import "com/coralogixapis/incidents/v1/incident_filters.proto";
import "com/coralogixapis/incidents/v1/incident_query.proto";
import "com/coralogixapis/incidents/v1/incident_timeline_event.proto";
import "com/coralogixapis/incidents/v1/source_single_alert_snapshot.proto";
import "google/api/annotations.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

message AuditLogDescription {
  optional string description = 1;
}

extend google.protobuf.MethodOptions {
  optional AuditLogDescription audit_log_description = 5000;
}

service IncidentsService {
  rpc GetIncident(GetIncidentRequest) returns (GetIncidentResponse) {
    option (audit_log_description).description = "get incident";
    option (google.api.http) = {get: "/v1/incidents/{id}"};
  }

  rpc BatchGetIncident(BatchGetIncidentRequest) returns (BatchGetIncidentResponse) {
    option (audit_log_description).description = "batch get incidents";
    option (google.api.http) = {get: "/v1/incidents/incidents:batchGet"};
  }

  rpc ListIncidents(ListIncidentsRequest) returns (ListIncidentsResponse) {
    option (audit_log_description).description = "get incidents list";
    option (google.api.http) = {
      get: "/v1/incidents"
      body: "*"
    };
  }

  rpc CreateIncidentAction(CreateIncidentActionRequest) returns (CreateIncidentActionResponse) {
    option (audit_log_description).description = "create incident action";
    option (google.api.http) = {
      get: "/v1/incidents/incident-action"
      body: "*"
    };
  }

  rpc AtomicBatchExecuteIncidentAction(AtomicBatchExecuteIncidentActionRequest) returns (AtomicBatchExecuteIncidentActionResponse) {
    option (audit_log_description).description = "Atomic Batch execute incident action";
    option (google.api.http) = {get: "/v1/incidents/incident-action:atomicBatchExecute"};
  }

  rpc CreateAlertIncidentsAction(CreateAlertIncidentsActionRequest) returns (CreateAlertIncidentsActionResponse) {
    option (audit_log_description).description = "create alert incidents action";
    option (google.api.http) = {
      get: "/v1/incidents/alert-incident-action"
      body: "*"
    };
  }

  rpc ListIncidentAlerts(ListIncidentAlertsRequest) returns (ListIncidentAlertsResponse) {
    option (audit_log_description).description = "list incident alerts";
    option (google.api.http) = {
      get: "/v1/incidents/alerts"
      body: "*"
    };
  }

  rpc ListNotificationGroups(ListNotificationGroupsRequest) returns (ListNotificationGroupsResponse) {
    option (audit_log_description).description = "list notification groups";
    option (google.api.http) = {
      get: "/v1/incidents/notification-groups"
      body: "*"
    };
  }

  rpc ListFilters(ListFiltersRequest) returns (ListFiltersResponse) {
    option (audit_log_description).description = "ListFilters";
    option (google.api.http) = {
      get: "/v1/incidents/list-filters"
      body: "*"
    };
  }

  rpc GetTriggeredAlertsTimeline(GetTriggeredAlertsTimelineRequest) returns (GetTriggeredAlertsTimelineResponse) {
    option (audit_log_description).description = "get triggered alerts timeline";
    option (google.api.http) = {
      get: "/v1/incidents/triggered-alerts-timeline"
      body: "*"
    };
  }
}

enum TimelinesGroupByFields {
  TIMELINES_GROUP_BY_FIELDS_UNSPECIFIED = 0;
  TIMELINES_GROUP_BY_FIELDS_NONE = 1;
  TIMELINES_GROUP_BY_FIELDS_ALERT = 2;
  TIMELINES_GROUP_BY_FIELDS_NOTIFICATION_GROUP = 3;
}

message GetIncidentRequest {
  google.protobuf.StringValue id = 1;
}

message GetIncidentResponse {
  Incident incident = 1;
}

message ListIncidentsResponse {
  repeated Incident incidents = 1;
  google.protobuf.UInt32Value total_size = 2;
  google.protobuf.StringValue next_page_token = 3;
}

message ListIncidentsRequest {
  IncidentQuery query = 1;
  google.protobuf.UInt32Value page_size = 2;
  google.protobuf.StringValue page_token = 3;
}

message ListTimelinesRequest {
  IncidentQuery query = 1;
  google.protobuf.UInt32Value granularity_seconds = 2;
  repeated google.protobuf.StringValue incident_ids = 3;
  TimelinesGroupByFields group_by = 4;
}

message ListTimelinesResponse {
  map<string, TimelineEventList> events = 1;
  TimelinesGroupByFields group_by = 2;
}

message GetTriggeredAlertsTimelineRequest {
  IncidentQuery query = 1;
  google.protobuf.UInt32Value granularity_seconds = 2;
}

message GetTriggeredAlertsTimelineResponse {
  repeated TriggeredAlertsPerTimestamp events = 1;
}

message TriggeredAlertsPerTimestamp {
  google.protobuf.UInt32Value number_of_alerts = 1;
  google.protobuf.Timestamp timestamp = 2;
}

message TimelineEventList {
  repeated IncidentTimelineEvent events = 1;
}

message BatchGetIncidentRequest {
  repeated google.protobuf.StringValue ids = 1;
  IncidentQuery query = 2;
}

message BatchGetIncidentResponse {
  map<string, Incident> incidents = 1;
  repeated google.protobuf.StringValue not_found_ids = 2;
}

message DeleteIncidentRequest {
  google.protobuf.StringValue id = 1;
}

message CreateIncidentActionRequest {
  IncidentAction incident_action = 1;
}

message CreateIncidentActionResponse {
  Incident incident = 1;
}

message AtomicBatchExecuteIncidentActionRequest {
  repeated IncidentActionExecutionRequest requests = 1;
}

message AtomicBatchExecuteIncidentActionResponse {
  repeated IncidentActionExecutionResponse matching_responses = 1;
  //  com.coralogix.api.ResponseStatus status = 2;
}

message IncidentActionExecutionRequest {
  oneof request {
    CreateIncidentActionRequest create = 1;
  }
}
message CreateAlertIncidentsActionRequest {
  IncidentAction alert_incident_action = 1;
}
message CreateAlertIncidentsActionResponse {
  repeated Incident incidents = 1;
}
message IncidentActionExecutionResponse {
  oneof response {
    CreateIncidentActionResponse create = 1;
  }
}

message ListIncidentAlertsRequest {
  IncidentQuery query = 1;
  google.protobuf.UInt32Value page_size = 2;
  google.protobuf.StringValue page_token = 3;
}

message ListIncidentAlertsResponse {
  repeated AlertDef alerts = 1;
  google.protobuf.UInt32Value total_size = 2;
  google.protobuf.StringValue next_page_token = 3;
}

message ListNotificationGroupsRequest {
  IncidentQuery query = 1;
}

message ListFiltersRequest {
  IncidentQuery query = 1;
}

message ListFiltersResponse {
  repeated Filter filters = 1;
}

message ListNotificationGroupsResponse {
  repeated NotificationGroup notification_groups = 1;
}

message DeleteIncidentResponse {}

message ReplaceIncidentRequest {
  Incident incident = 1;
}

message ReplaceIncidentResponse {
  Incident incident = 1;
}

message GetIncidentEventsRequest {
  google.protobuf.Timestamp from = 2;
  google.protobuf.Timestamp to = 3;
}